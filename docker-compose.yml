services:
  backend:
    build: ./backend
    container_name: todo-app-backend
    ports:
      - "3000:3000"
    depends_on:
      - mongo
  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
  frontend:
    build: ./frontend
    ports:
      - "8080:80"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.1
    container_name: filebeat
    command: filebeat -e -strict.perms=false
    user: root
    depends_on:
      - elasticsearch
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml  

  kibana-setup:
    image: curlimages/curl
    container_name: kibana-setup
    depends_on:
      - kibana
    volumes:
      - ./dashboards:/dashboards
    entrypoint: >
      sh -c "
      echo 'Waiting for Kibana...';
      until curl -s http://kibana:5601/api/status | grep '\"overall\":{\"level\":\"available\"'; do sleep 5; done;      echo 'Importing dashboards...';
      curl -s -X POST http://kibana:5601/api/saved_objects/_import?overwrite=true -H 'kbn-xsrf: true' --form file=@/dashboards/todoBackend.ndjson
      "


volumes:
  esdata:
  mongo-data: